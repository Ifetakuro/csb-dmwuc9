{"version":3,"sources":["API/userApi.js","Redux/singleUser/action.js","Pages/User.js"],"names":["userApi","axios","create","baseURL","getSingleUserRequest","id","type","GET_SINGLE_USER_REQUEST","payload","getSingleUserSuccess","users","GET_SINGLE_USER_SUCCESS","getSingleUserFailure","erorr","GET_SINGLE_USER_FAILURE","User","userId","useParams","console","log","singleUser","useSelector","state","singleUserData","response","results","dispatch","useDispatch","useEffect","get","then","data","catch","error","errorMsg","message","RESET_SINGLE_USER","loading","Object","keys","length","src","picture","large","alt","name","first","title","last","gender","email","dob","age","phone","postcode","location","street","number","city","country","nat"],"mappings":"iHAAA,sCAEaA,EAFb,MAEuBC,EAAMC,OAAO,CAClCC,QAAS,iC,mICqBLC,EAAuB,SAACC,GAC5B,MAAO,CACLC,KAAMC,IACNC,QAASH,EAEb,EAEMI,EAAuB,SAACC,GAC5B,MAAO,CACLJ,KAAMK,IACNH,QAASE,EAEb,EAEME,EAAuB,SAACC,GAC5B,MAAO,CACLP,KAAMQ,IACNN,QAASK,EAEb,E,OCrCe,SAASE,IACtB,IAAQC,EAAWC,cAAXD,OACRE,QAAQC,IAAIH,GACZ,IAAMI,EAAaC,aAAY,SAACC,GAAK,OAAKA,EAAMF,UAAU,IACpDG,EACJH,GAAcA,EAAWI,SAAWJ,EAAWI,SAASC,QAAQ,GAAK,CAAC,EACxEP,QAAQC,IAAIH,GACZ,IAAMU,EAAWC,cAQjB,OAPAC,qBAAU,WDNiB,IAACvB,ECS1B,OAFAqB,GDP0BrB,ECOHW,EDNlB,SAACU,GACNA,EAAStB,EAAqBC,IAC9BL,IACG6B,IAAI,QAAD,OAASxB,IACZyB,MAAK,SAACN,GACL,IAAMd,EAAQc,EAASO,KACvBL,EAASjB,EAAqBC,GAChC,IACCsB,OAAM,SAACC,GACN,IAAMC,EAAWD,EAAME,QACvBT,EAASd,EAAqBsB,GAChC,GACJ,ICJS,WACLR,ED4BG,CACLpB,KAAM8B,KC5BN,CACF,GAAG,CAACV,EAAUV,IAEZ,8BACGI,EAAWiB,QACV,cAAC,IAAM,IAEP,8BAC0C,IAAvCC,OAAOC,KAAKhB,GAAgBiB,OAC3B,2CAEA,gCACE,8BACE,qBACEC,IAAKlB,EAAemB,QAAQC,MAC5BC,IAAKrB,EAAesB,KAAKC,UAG7B,gCACE,gCACE,8BACE,yCAAkB,IAAEvB,EAAesB,KAAKE,MAAO,IAC9CxB,EAAesB,KAAKC,MAAK,IAAGvB,EAAesB,KAAKG,QAEnD,4BAAIzB,EAAe0B,SACnB,4BAAI1B,EAAe2B,QACnB,4BAAI3B,EAAe4B,IAAIC,SAEzB,gCACE,4BAAI7B,EAAe8B,QACnB,4BAAI9B,EAAe+B,WACnB,8BACG/B,EAAegC,SAASC,OAAOC,OAAM,IAAG,IACxClC,EAAegC,SAASC,OAAOX,KAAM,IACrCtB,EAAegC,SAASG,QAE3B,8BACGnC,EAAegC,SAASjC,MAAK,IAAG,IAChCC,EAAegC,SAASI,QAAO,IAAGpC,EAAeqC,mBAUtE,C","file":"static/js/9.4fcb6b66.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const userApi = axios.create({\r\n  baseURL: \"https://randomuser.me/api/1.4\"\r\n});\r\n","import { userApi } from \"../../API/userApi\";\r\nimport {\r\n  GET_SINGLE_USER_FAILURE,\r\n  GET_SINGLE_USER_REQUEST,\r\n  GET_SINGLE_USER_SUCCESS,\r\n  RESET_SINGLE_USER\r\n} from \"./type\";\r\n\r\nexport const getSingleUser = (id) => {\r\n  return (dispatch) => {\r\n    dispatch(getSingleUserRequest(id));\r\n    userApi\r\n      .get(`/?id=${id}`)\r\n      .then((response) => {\r\n        const users = response.data;\r\n        dispatch(getSingleUserSuccess(users));\r\n      })\r\n      .catch((error) => {\r\n        const errorMsg = error.message;\r\n        dispatch(getSingleUserFailure(errorMsg));\r\n      });\r\n  };\r\n};\r\n\r\nconst getSingleUserRequest = (id) => {\r\n  return {\r\n    type: GET_SINGLE_USER_REQUEST,\r\n    payload: id\r\n  };\r\n};\r\n\r\nconst getSingleUserSuccess = (users) => {\r\n  return {\r\n    type: GET_SINGLE_USER_SUCCESS,\r\n    payload: users\r\n  };\r\n};\r\n\r\nconst getSingleUserFailure = (erorr) => {\r\n  return {\r\n    type: GET_SINGLE_USER_FAILURE,\r\n    payload: erorr\r\n  };\r\n};\r\n\r\nexport const resetSingleUser = () => {\r\n  return {\r\n    type: RESET_SINGLE_USER\r\n  };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Loader from \"../components/Loading\";\r\nimport { getSingleUser, resetSingleUser } from \"../Redux/singleUser/action\";\r\n\r\nexport default function User() {\r\n  const { userId } = useParams();\r\n  console.log(userId);\r\n  const singleUser = useSelector((state) => state.singleUser);\r\n  const singleUserData =\r\n    singleUser && singleUser.response ? singleUser.response.results[0] : {};\r\n  console.log(userId);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getSingleUser(userId));\r\n\r\n    return () => {\r\n      dispatch(resetSingleUser());\r\n    };\r\n  }, [dispatch, userId]);\r\n  return (\r\n    <div>\r\n      {singleUser.loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div>\r\n          {Object.keys(singleUserData).length === 0 ? (\r\n            <div>No data </div>\r\n          ) : (\r\n            <div>\r\n              <div>\r\n                <img\r\n                  src={singleUserData.picture.large}\r\n                  alt={singleUserData.name.first}\r\n                />\r\n              </div>\r\n              <div>\r\n                <div>\r\n                  <p>\r\n                    <span>Name:</span> {singleUserData.name.title}{\" \"}\r\n                    {singleUserData.name.first} {singleUserData.name.last}\r\n                  </p>\r\n                  <p>{singleUserData.gender}</p>\r\n                  <p>{singleUserData.email}</p>\r\n                  <p>{singleUserData.dob.age}</p>\r\n                </div>\r\n                <div>\r\n                  <p>{singleUserData.phone}</p>\r\n                  <p>{singleUserData.postcode}</p>\r\n                  <p>\r\n                    {singleUserData.location.street.number},{\" \"}\r\n                    {singleUserData.location.street.name}{\" \"}\r\n                    {singleUserData.location.city}\r\n                  </p>\r\n                  <p>\r\n                    {singleUserData.location.state},{\" \"}\r\n                    {singleUserData.location.country} {singleUserData.nat}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}